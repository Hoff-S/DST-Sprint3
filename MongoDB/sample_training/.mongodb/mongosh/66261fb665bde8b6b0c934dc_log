{"t":{"$date":"2024-04-22T08:28:38.379Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"2.2.4","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2024-04-15T12:05:19.070Z","gitVersion":"136eb9156b1ffd54cc4f3e5eebf647f0a6f9aee2","nodeVersion":"v20.12.2","opensslVersion":"3.0.13+quic","sharedOpenssl":false,"runtimeArch":"x64","runtimePlatform":"linux","runtimeGlibcVersion":"2.31","deps":{"nodeDriverVersion":"6.5.0","libmongocryptVersion":"1.9.0-20230828+git8e7f69f1c0","libmongocryptNodeBindingsVersion":"6.0.0","kerberosVersion":"2.1.0"}}}
{"t":{"$date":"2024-04-22T08:28:38.398Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2024-04-22T08:28:38.399Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2024-04-22T08:28:38.493Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.4","driver":{"name":"nodejs|mongosh","version":"6.5.0|2.2.4"},"devtoolsConnectVersion":"2.6.0","host":"127.0.0.1:27017"}}
{"t":{"$date":"2024-04-22T08:28:38.508Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2024-04-22T08:28:38.535Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2024-04-22T08:28:38.569Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"66261fb665bde8b6b0c934dc","userId":null,"telemetryAnonymousId":"6626030a078ab50a9bc934db","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.4","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"5.0.26","node_version":"v20.12.2","mongosh_version":"2.2.4","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":"5.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-04-22T08:28:38.576Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2024-04-22T08:28:38.579Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2024-04-22T08:28:38.654Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2024-04-22T08:28:38.661Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2024-04-22T08:28:38.663Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2024-04-22T08:28:38.666Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"test","arguments":{}}}
{"t":{"$date":"2024-04-22T08:28:38.670Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2024-04-22T08:28:38.671Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2024-04-22T08:28:38.681Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2024-04-22T08:28:38.685Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"2.2.4"}}
{"t":{"$date":"2024-04-22T08:28:41.009Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"sample"}}
{"t":{"$date":"2024-04-22T08:28:41.044Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"66261fb665bde8b6b0c934dc","userId":null,"telemetryAnonymousId":"6626030a078ab50a9bc934db","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.4","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"5.0.26","node_version":"v20.12.2","mongosh_version":"2.2.4","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":"5.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-04-22T08:28:53.364Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find()"}}
{"t":{"$date":"2024-04-22T08:28:53.551Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{}}}}
{"t":{"$date":"2024-04-22T08:29:25.391Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.findOne()"}}
{"t":{"$date":"2024-04-22T08:29:25.415Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-22T08:31:04.655Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({ \"name\": \"Sony\" }, { \"acquisitions\": 1 })"}}
{"t":{"$date":"2024-04-22T08:31:04.688Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"name":"Sony"},"options":{"projection":{"acquisitions":1}}}}}
{"t":{"$date":"2024-04-22T08:31:31.997Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Missing semicolon. (1:66)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({ \u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Sony\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"acquisitions\"\u001b[39m\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":1,"column":66,"index":66},"pos":66,"message":"Missing semicolon. (1:66)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({ \u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Sony\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"acquisitions\"\u001b[39m\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Missing semicolon. (1:66)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({ \u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Sony\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"acquisitions\"\u001b[39m\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-22T08:32:21.881Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Missing semicolon. (1:68)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({ \u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Sony\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"acquisitions.0\"\u001b[39m\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"MissingSemicolon","loc":{"line":1,"column":68,"index":68},"pos":68,"message":"Missing semicolon. (1:68)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({ \u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Sony\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"acquisitions.0\"\u001b[39m\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Missing semicolon. (1:68)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({ \u001b[32m\"name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Sony\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"acquisitions.0\"\u001b[39m\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m })\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-22T08:32:26.159Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({ \"name\": \"Sony\" }, { \"acquisitions.0\": 1 })"}}
{"t":{"$date":"2024-04-22T08:32:26.169Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"name":"Sony"},"options":{"projection":{"acquisitions.0":1}}}}}
{"t":{"$date":"2024-04-22T08:35:27.138Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.findOne()"}}
{"t":{"$date":"2024-04-22T08:35:27.145Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-22T08:39:19.454Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({$gt:{'acquisition.0.acquired_year':2007}},{'name':1,'founded_year':1})"}}
{"t":{"$date":"2024-04-22T08:39:19.462Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"$gt":{"acquisition.0.acquired_year":2007}},"options":{"projection":{"name":1,"founded_year":1}}}}}
{"t":{"$date":"2024-04-22T08:39:19.471Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: unknown top level operator: $gt. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"unknown top level operator: $gt. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","code":2,"codeName":"BadValue"},"ok":0,"code":2,"codeName":"BadValue","message":"unknown top level operator: $gt. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: unknown top level operator: $gt. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async FindCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2410397)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-22T08:40:33.250Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisition.0.acquired_year':{$gt:2007}},{'name':1,'founded_year':1})"}}
{"t":{"$date":"2024-04-22T08:40:33.259Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisition.0.acquired_year":{"$gt":2007}},"options":{"projection":{"name":1,"founded_year":1}}}}}
{"t":{"$date":"2024-04-22T08:40:54.198Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions.0.acquired_year':{$gt:2007}},{'name':1,'founded_year':1})"}}
{"t":{"$date":"2024-04-22T08:40:54.206Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions.0.acquired_year":{"$gt":2007}},"options":{"projection":{"name":1,"founded_year":1}}}}}
{"t":{"$date":"2024-04-22T08:45:57.282Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$elemMatch:{'acquired_year':2010,'aquired_month':3,'acquired_day':2}}},{'name':1})"}}
{"t":{"$date":"2024-04-22T08:45:57.289Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"acquired_year":2010,"aquired_month":3,"acquired_day":2}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-22T08:46:30.191Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{'$elemMatch':{'acquired_year':2010,'aquired_month':3,'acquired_day':2}}},{'name':1})"}}
{"t":{"$date":"2024-04-22T08:46:30.195Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"acquired_year":2010,"aquired_month":3,"acquired_day":2}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-22T08:46:58.483Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{'$elemMatch':{'acquired_year':2010,'acquired_month':3,'acquired_day':2}}},{'name':1})"}}
{"t":{"$date":"2024-04-22T08:46:58.487Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"acquired_year":2010,"acquired_month":3,"acquired_day":2}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-22T08:47:08.557Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$elemMatch:{'acquired_year':2010,'acquired_month':3,'acquired_day':2}}},{'name':1})"}}
{"t":{"$date":"2024-04-22T08:47:08.571Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"acquired_year":2010,"acquired_month":3,"acquired_day":2}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-22T08:50:04.059Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$ne:{'price_currency_code':'USD'}}},{'name':1})"}}
{"t":{"$date":"2024-04-22T08:50:04.072Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$ne":{"price_currency_code":"USD"}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-22T08:55:42.459Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{'price_currency_code':{$ne:'USD'}}},{'name':1})"}}
{"t":{"$date":"2024-04-22T08:55:42.483Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"price_currency_code":{"$ne":"USD"}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-22T08:56:10.621Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$elemMatch:{'price_currency_code':{$ne:'USD'}}}},{'name':1})"}}
{"t":{"$date":"2024-04-22T08:56:10.664Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"price_currency_code":{"$ne":"USD"}}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-22T09:56:51.223Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([\n  {$match : \n    {$and : \n      [\n        {\"relationships.person.first_name\":\"Elon\"}, \n        {\"relationships.person.last_name\":\"Musk\"}\n      ]\n    }\n  }]\n)"}}
{"t":{"$date":"2024-04-22T09:56:51.231Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}}]}}}
{"t":{"$date":"2024-04-22T09:57:28.213Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] } }] )"}}
{"t":{"$date":"2024-04-22T09:57:28.223Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}}]}}}
{"t":{"$date":"2024-04-22T09:58:37.119Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:135)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39maggregate([ { $match\u001b[33m:\u001b[39m { $and\u001b[33m:\u001b[39m [ { \u001b[32m\"relationships.person.first_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Elon\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"relationships.person.last_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Musk\"\u001b[39m }] } \u001b[33m,\u001b[39m{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}] )\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":135,"index":135},"pos":135,"message":"Unexpected token (1:135)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39maggregate([ { $match\u001b[33m:\u001b[39m { $and\u001b[33m:\u001b[39m [ { \u001b[32m\"relationships.person.first_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Elon\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"relationships.person.last_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Musk\"\u001b[39m }] } \u001b[33m,\u001b[39m{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}] )\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:135)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39maggregate([ { $match\u001b[33m:\u001b[39m { $and\u001b[33m:\u001b[39m [ { \u001b[32m\"relationships.person.first_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Elon\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"relationships.person.last_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Musk\"\u001b[39m }] } \u001b[33m,\u001b[39m{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}] )\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-22T09:58:42.617Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:135)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39maggregate([ { $match\u001b[33m:\u001b[39m { $and\u001b[33m:\u001b[39m [ { \u001b[32m\"relationships.person.first_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Elon\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"relationships.person.last_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Musk\"\u001b[39m }] }\u001b[33m,\u001b[39m {\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}] )\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":135,"index":135},"pos":135,"message":"Unexpected token (1:135)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39maggregate([ { $match\u001b[33m:\u001b[39m { $and\u001b[33m:\u001b[39m [ { \u001b[32m\"relationships.person.first_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Elon\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"relationships.person.last_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Musk\"\u001b[39m }] }\u001b[33m,\u001b[39m {\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}] )\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:135)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39maggregate([ { $match\u001b[33m:\u001b[39m { $and\u001b[33m:\u001b[39m [ { \u001b[32m\"relationships.person.first_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Elon\"\u001b[39m }\u001b[33m,\u001b[39m { \u001b[32m\"relationships.person.last_name\"\u001b[39m\u001b[33m:\u001b[39m \u001b[32m\"Musk\"\u001b[39m }] }\u001b[33m,\u001b[39m {\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}] )\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                                                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-22T09:59:22.667Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] }},{'name':1}] )"}}
{"t":{"$date":"2024-04-22T09:59:22.676Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"name":1}]}}}
{"t":{"$date":"2024-04-22T09:59:22.693Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Unrecognized pipeline stage name: 'name'","attr":{"errorResponse":{"ok":0,"errmsg":"Unrecognized pipeline stage name: 'name'","code":40324,"codeName":"Location40324"},"ok":0,"code":40324,"codeName":"Location40324","message":"Unrecognized pipeline stage name: 'name'","name":"MongoServerError","stack":"MongoServerError: Unrecognized pipeline stage name: 'name'\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async AggregationCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2406275)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-22T09:59:40.880Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] }},{'$name':1}] )"}}
{"t":{"$date":"2024-04-22T09:59:40.887Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$name":1}]}}}
{"t":{"$date":"2024-04-22T09:59:40.898Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Unrecognized pipeline stage name: '$name'","attr":{"errorResponse":{"ok":0,"errmsg":"Unrecognized pipeline stage name: '$name'","code":40324,"codeName":"Location40324"},"ok":0,"code":40324,"codeName":"Location40324","message":"Unrecognized pipeline stage name: '$name'","name":"MongoServerError","stack":"MongoServerError: Unrecognized pipeline stage name: '$name'\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async AggregationCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2406275)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-22T10:01:28.295Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] }},{$project:{'$name':1}}] )"}}
{"t":{"$date":"2024-04-22T10:01:28.301Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"$name":1}}]}}}
{"t":{"$date":"2024-04-22T10:01:28.322Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","code":16410,"codeName":"Location16410"},"ok":0,"code":16410,"codeName":"Location16410","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async AggregationCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2406275)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-22T10:02:08.175Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] }},{$project:{'$name':1}}] )"}}
{"t":{"$date":"2024-04-22T10:02:08.181Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"$name":1}}]}}}
{"t":{"$date":"2024-04-22T10:02:08.189Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","code":16410,"codeName":"Location16410"},"ok":0,"code":16410,"codeName":"Location16410","message":"Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: Invalid $project :: caused by :: FieldPath field names may not start with '$'. Consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async AggregationCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2406275)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-22T10:02:17.496Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([\n  {$match : \n    {$and : \n      [\n        {\"relationships.person.first_name\":\"Elon\"}, \n        {\"relationships.person.last_name\":\"Musk\"}\n      ]\n    }\n  }, \n  {$project : {\"_id\":1,\"name\":1}}\n  ]\n)"}}
{"t":{"$date":"2024-04-22T10:02:17.502Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"_id":1,"name":1}}]}}}
{"t":{"$date":"2024-04-22T10:02:36.320Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2024-04-22T10:03:00.097Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2024-04-22T10:03:00.788Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2024-04-22T10:03:07.485Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2024-04-22T10:03:09.663Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"f"}}
{"t":{"$date":"2024-04-22T10:03:09.668Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: f is not defined","attr":{"message":"f is not defined","name":"ReferenceError","stack":"ReferenceError: f is not defined\n    at REPL56:67:37\n    at REPL56:81:5\n    at REPL56:85:3\n    at ContextifyScript.runInContext (node:vm:148:12)\n    at PrettyREPLServer.defaultEval (node:repl:600:22)\n    at bound (node:domain:432:15)\n    at PrettyREPLServer.runBound (node:domain:443:12)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:71521)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:71244)\n    at node:internal/util:430:7","cause":null}}
{"t":{"$date":"2024-04-22T10:03:16.697Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"fdd(\n)"}}
{"t":{"$date":"2024-04-22T10:03:16.710Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: fdd is not defined","attr":{"message":"fdd is not defined","name":"ReferenceError","stack":"ReferenceError: fdd is not defined\n    at REPL58:67:69\n    at REPL58:81:5\n    at REPL58:85:3\n    at ContextifyScript.runInContext (node:vm:148:12)\n    at PrettyREPLServer.defaultEval (node:repl:600:22)\n    at bound (node:domain:432:15)\n    at PrettyREPLServer.runBound (node:domain:443:12)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:71521)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:71244)\n    at node:internal/util:430:7","cause":null}}
{"t":{"$date":"2024-04-22T10:03:38.134Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.findOne(\n)"}}
{"t":{"$date":"2024-04-22T10:03:38.145Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-22T10:04:27.541Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] } }, { $project: { \"_id\": 1, \"name\": 1 } }] )"}}
{"t":{"$date":"2024-04-22T10:04:27.558Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"_id":1,"name":1}}]}}}
{"t":{"$date":"2024-04-22T10:06:34.934Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([\n  {$match : \n    {$and : \n      [\n        {\"relationships.person.first_name\":\"Elon\"}, \n        {\"relationships.person.last_name\":\"Musk\"}\n      ]\n    }\n  }, \n  {$project : \n    {\"_id\":1,\"society\":\"$name\",\n    \"employee\":\n      {\"first_name\":\"$relationships.person.first_name\",\n      \"last_name\":\"$relationships.person.last_name\"\n    }}\n  }\n  ]\n)"}}
{"t":{"$date":"2024-04-22T10:06:34.941Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"_id":1,"society":"$name","employee":{"first_name":"$relationships.person.first_name","last_name":"$relationships.person.last_name"}}}]}}}
{"t":{"$date":"2024-04-22T10:13:09.698Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] } }, { $project: { \"_id\": 1, \"society\": \"$name\", \"employee\": { \"first_name\": \"$relationships.person.first_name\", \"last_name\": \"$relationships.person.last_name\" } } }] )"}}
{"t":{"$date":"2024-04-22T10:13:09.705Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"_id":1,"society":"$name","employee":{"first_name":"$relationships.person.first_name","last_name":"$relationships.person.last_name"}}}]}}}
{"t":{"$date":"2024-04-22T10:18:23.677Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] } }, { $project: { \"_id\": 1, \"society\": \"$name\", \"employee\": { \"first_name\": \"$relationships.person.first_name\", \"last_name\": \"$relationships.person.last_name\" } } }] )"}}
{"t":{"$date":"2024-04-22T10:18:23.684Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"_id":1,"society":"$name","employee":{"first_name":"$relationships.person.first_name","last_name":"$relationships.person.last_name"}}}]}}}
{"t":{"$date":"2024-04-22T10:18:27.154Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.aggregate([ { $match: { $and: [ { \"relationships.person.first_name\": \"Elon\" }, { \"relationships.person.last_name\": \"Musk\" }] } }, { $project: { \"_id\": 1, \"society\": \"$name\", \"employee\": { \"first_name\": \"$relationships.person.first_name\", \"last_name\": \"$relationships.person.last_name\" } } }] )"}}
{"t":{"$date":"2024-04-22T10:18:27.160Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"aggregate","class":"Collection","db":"sample","coll":"cie","arguments":{"options":{},"pipeline":[{"$match":{"$and":[{"relationships.person.first_name":"Elon"},{"relationships.person.last_name":"Musk"}]}},{"$project":{"_id":1,"society":"$name","employee":{"first_name":"$relationships.person.first_name","last_name":"$relationships.person.last_name"}}}]}}}
{"t":{"$date":"2024-04-22T10:21:36.185Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.findOne()"}}
{"t":{"$date":"2024-04-22T10:21:36.190Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-22T10:21:47.531Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.findOne()"}}
{"t":{"$date":"2024-04-22T10:21:47.537Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-22T10:22:02.237Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.findOne()"}}
{"t":{"$date":"2024-04-22T10:22:02.243Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-22T10:22:05.704Z"},"s":"I","c":"MONGOSH","id":1000000045,"ctx":"analytics","msg":"Flushed outstanding data","attr":{"flushError":"Trying to persist throttle state before userId is set","flushDuration":0}}
