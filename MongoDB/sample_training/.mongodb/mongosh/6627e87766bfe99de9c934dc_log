{"t":{"$date":"2024-04-23T16:57:27.571Z"},"s":"I","c":"MONGOSH","id":1000000000,"ctx":"log","msg":"Starting log","attr":{"execPath":"/usr/bin/mongosh","envInfo":{"EDITOR":null,"NODE_OPTIONS":null,"TERM":"xterm"},"version":"2.2.4","distributionKind":"compiled","buildArch":"x64","buildPlatform":"linux","buildTarget":"linux-x64","buildTime":"2024-04-15T12:05:19.070Z","gitVersion":"136eb9156b1ffd54cc4f3e5eebf647f0a6f9aee2","nodeVersion":"v20.12.2","opensslVersion":"3.0.13+quic","sharedOpenssl":false,"runtimeArch":"x64","runtimePlatform":"linux","runtimeGlibcVersion":"2.31","deps":{"nodeDriverVersion":"6.5.0","libmongocryptVersion":"1.9.0-20230828+git8e7f69f1c0","libmongocryptNodeBindingsVersion":"6.0.0","kerberosVersion":"2.1.0"}}}
{"t":{"$date":"2024-04-23T16:57:27.586Z"},"s":"I","c":"MONGOSH","id":1000000005,"ctx":"config","msg":"User updated"}
{"t":{"$date":"2024-04-23T16:57:27.587Z"},"s":"I","c":"MONGOSH","id":1000000048,"ctx":"config","msg":"Loading global configuration file","attr":{"filename":"/etc/mongosh.conf","found":false}}
{"t":{"$date":"2024-04-23T16:57:27.636Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000042,"ctx":"mongosh-connect","msg":"Initiating connection attempt","attr":{"uri":"mongodb://127.0.0.1:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.4","driver":{"name":"nodejs|mongosh","version":"6.5.0|2.2.4"},"devtoolsConnectVersion":"2.6.0","host":"127.0.0.1:27017"}}
{"t":{"$date":"2024-04-23T16:57:27.650Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000035,"ctx":"mongosh-connect","msg":"Server heartbeat succeeded","attr":{"connectionId":"127.0.0.1:27017"}}
{"t":{"$date":"2024-04-23T16:57:27.675Z"},"s":"I","c":"DEVTOOLS-CONNECT","id":1000000037,"ctx":"mongosh-connect","msg":"Connection attempt finished"}
{"t":{"$date":"2024-04-23T16:57:27.709Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"6627e87766bfe99de9c934dc","userId":null,"telemetryAnonymousId":"6626030a078ab50a9bc934db","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.4","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"5.0.26","node_version":"v20.12.2","mongosh_version":"2.2.4","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":"5.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-04-23T16:57:27.715Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"ping":1}}}}
{"t":{"$date":"2024-04-23T16:57:27.716Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2024-04-23T16:57:27.777Z"},"s":"I","c":"MONGOSH","id":1000000010,"ctx":"shell-api","msg":"Initialized context","attr":{"method":"setCtx","arguments":{}}}
{"t":{"$date":"2024-04-23T16:57:27.782Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"adminCommand","class":"Database","db":"test","arguments":{"cmd":{"getLog":"startupWarnings"}}}}
{"t":{"$date":"2024-04-23T16:57:27.784Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"getSiblingDB","class":"Database","db":"test","arguments":{"db":"admin"}}}
{"t":{"$date":"2024-04-23T16:57:27.787Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"hello","class":"Database","db":"test","arguments":{}}}
{"t":{"$date":"2024-04-23T16:57:27.790Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000024,"ctx":"snippets","msg":"Fetching snippet index","attr":{"refreshMode":"allow-cached"}}
{"t":{"$date":"2024-04-23T16:57:27.791Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000019,"ctx":"snippets","msg":"Loaded snippets","attr":{"installdir":"/data/db/.mongodb/mongosh/snippets"}}
{"t":{"$date":"2024-04-23T16:57:27.802Z"},"s":"I","c":"MONGOSH-SNIPPETS","id":1000000027,"ctx":"snippets","msg":"Fetching snippet index done"}
{"t":{"$date":"2024-04-23T16:57:27.803Z"},"s":"I","c":"MONGOSH","id":1000000015,"ctx":"repl","msg":"Warning about .mongorc.js/.mongoshrc.js mismatch"}
{"t":{"$date":"2024-04-23T16:57:27.837Z"},"s":"I","c":"MONGOSH","id":1000000002,"ctx":"repl","msg":"Started REPL","attr":{"version":"2.2.4"}}
{"t":{"$date":"2024-04-23T16:57:29.893Z"},"s":"I","c":"MONGOSH","id":1000000008,"ctx":"shell-api","msg":"Used \"use\" command","attr":{"db":"sample"}}
{"t":{"$date":"2024-04-23T16:57:29.943Z"},"s":"I","c":"MONGOSH","id":1000000004,"ctx":"connect","msg":"Connecting to server","attr":{"session_id":"6627e87766bfe99de9c934dc","userId":null,"telemetryAnonymousId":"6626030a078ab50a9bc934db","connectionUri":"mongodb://<ip address>:27017/?directConnection=true&serverSelectionTimeoutMS=2000&appName=mongosh+2.2.4","is_atlas":false,"is_localhost":true,"is_do":false,"server_version":"5.0.26","node_version":"v20.12.2","mongosh_version":"2.2.4","server_os":"linux","server_arch":"x86_64","is_enterprise":false,"auth_type":null,"is_data_federation":false,"is_stream":false,"dl_version":null,"atlas_version":null,"is_genuine":true,"non_genuine_server_name":"mongodb","is_local_atlas":false,"fcv":"5.0","api_version":null,"api_strict":null,"api_deprecation_errors":null}}
{"t":{"$date":"2024-04-23T16:57:55.766Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \",\" (1:23)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":23,"index":23},"pos":23,"message":"Unexpected token, expected \",\" (1:23)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \",\" (1:23)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T16:58:10.322Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \",\" (1:23)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'ObjectId(\"56d5f7eb604eb380b0d8d9c8\")'\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":23,"index":23},"pos":23,"message":"Unexpected token, expected \",\" (1:23)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'ObjectId(\"56d5f7eb604eb380b0d8d9c8\")'\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \",\" (1:23)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'ObjectId(\"56d5f7eb604eb380b0d8d9c8\")'\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                        \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T16:58:22.440Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Invalid left-hand side in assignment expression. (1:18)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m=\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"InvalidLhs","loc":{"line":1,"column":18,"index":18},"pos":18,"message":"Invalid left-hand side in assignment expression. (1:18)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m=\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Invalid left-hand side in assignment expression. (1:18)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mfindOne(\u001b[32m\"_id\"\u001b[39m\u001b[33m=\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8\"\u001b[39m))\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:00:00.109Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({'_id':ObjectId('56d5f7eb604eb380b0d8d9c8')})"}}
{"t":{"$date":"2024-04-23T17:00:00.315Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{"_id":"56d5f7eb604eb380b0d8d9c8"},"options":{}}}}
{"t":{"$date":"2024-04-23T17:00:52.442Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unterminated string constant. (1:44)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m sample\u001b[33m>\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mupdateOne({\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8},{$push: {'scores': {'exam':'quizz','score':100.0}}})\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnterminatedString","loc":{"line":1,"column":44,"index":44},"pos":44,"message":"Unterminated string constant. (1:44)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m sample\u001b[33m>\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mupdateOne({\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8},{$push: {'scores': {'exam':'quizz','score':100.0}}})\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unterminated string constant. (1:44)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m sample\u001b[33m>\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mupdateOne({\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m\"56d5f7eb604eb380b0d8d9c8},{$push: {'scores': {'exam':'quizz','score':100.0}}})\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:01:11.382Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \",\" (1:70)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m sample\u001b[33m>\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mupdateOne({\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m'56d5f7eb604eb380b0d8d9c8'\u001b[39m}\u001b[33m,\u001b[39m{$push\u001b[33m:\u001b[39m {\u001b[32m'scores'\u001b[39m\u001b[33m:\u001b[39m {\u001b[32m'exam'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'quizz'\u001b[39m\u001b[33m,\u001b[39m\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m100.0\u001b[39m}}})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":70,"index":70},"pos":70,"message":"Unexpected token, expected \",\" (1:70)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m sample\u001b[33m>\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mupdateOne({\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m'56d5f7eb604eb380b0d8d9c8'\u001b[39m}\u001b[33m,\u001b[39m{$push\u001b[33m:\u001b[39m {\u001b[32m'scores'\u001b[39m\u001b[33m:\u001b[39m {\u001b[32m'exam'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'quizz'\u001b[39m\u001b[33m,\u001b[39m\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m100.0\u001b[39m}}})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \",\" (1:70)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m sample\u001b[33m>\u001b[39m db\u001b[33m.\u001b[39mgrades\u001b[33m.\u001b[39mupdateOne({\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[33mObjectId\u001b[39m(\u001b[32m'56d5f7eb604eb380b0d8d9c8'\u001b[39m}\u001b[33m,\u001b[39m{$push\u001b[33m:\u001b[39m {\u001b[32m'scores'\u001b[39m\u001b[33m:\u001b[39m {\u001b[32m'exam'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'quizz'\u001b[39m\u001b[33m,\u001b[39m\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m100.0\u001b[39m}}})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:01:28.186Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"sample> db.grades.updateOne({'_id':ObjectId('56d5f7eb604eb380b0d8d9c8')},{$push: {'scores': {'exam':'quizz','score':100.0}}})"}}
{"t":{"$date":"2024-04-23T17:01:28.201Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"ReferenceError: sample is not defined","attr":{"message":"sample is not defined","name":"ReferenceError","stack":"ReferenceError: sample is not defined\n    at REPL12:67:42\n    at REPL12:90:5\n    at REPL12:94:3\n    at ContextifyScript.runInContext (node:vm:148:12)\n    at PrettyREPLServer.defaultEval (node:repl:600:22)\n    at bound (node:domain:432:15)\n    at PrettyREPLServer.runBound (node:domain:443:12)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:71521)\n    at eval (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:135:71244)\n    at node:internal/util:430:7","cause":null}}
{"t":{"$date":"2024-04-23T17:01:43.198Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.updateOne({'_id':ObjectId('56d5f7eb604eb380b0d8d9c8')},{$push: {'scores': {'exam':'quizz','score':100.0}}})"}}
{"t":{"$date":"2024-04-23T17:01:43.210Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"updateOne","class":"Collection","db":"sample","coll":"grades","arguments":{"filter":{"_id":"56d5f7eb604eb380b0d8d9c8"},"options":{}}}}
{"t":{"$date":"2024-04-23T17:01:48.636Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({ '_id': ObjectId('56d5f7eb604eb380b0d8d9c8') })"}}
{"t":{"$date":"2024-04-23T17:01:48.643Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{"_id":"56d5f7eb604eb380b0d8d9c8"},"options":{}}}}
{"t":{"$date":"2024-04-23T17:04:09.166Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({'pop':{$gte:3000}})"}}
{"t":{"$date":"2024-04-23T17:04:09.175Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{"pop":{"$gte":3000}},"options":{}}}}
{"t":{"$date":"2024-04-23T17:06:59.991Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({$and: [{'pop':{$gt:10000}},{'pop':{$lt:20000}}]})"}}
{"t":{"$date":"2024-04-23T17:07:00.003Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{"$and":[{"pop":{"$gt":10000}},{"pop":{"$lt":20000}}]},"options":{}}}}
{"t":{"$date":"2024-04-23T17:11:04.690Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({$expr:{$eq:['student_id','class_id']}})"}}
{"t":{"$date":"2024-04-23T17:11:04.699Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{"$expr":{"$eq":["student_id","class_id"]}},"options":{}}}}
{"t":{"$date":"2024-04-23T17:11:13.317Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({$expr:{$eq:['$student_id','$class_id']}})"}}
{"t":{"$date":"2024-04-23T17:11:13.328Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{"$expr":{"$eq":["$student_id","$class_id"]}},"options":{}}}}
{"t":{"$date":"2024-04-23T17:14:07.383Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token, expected \",\" (1:41)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mzips\u001b[33m.\u001b[39mfind({}\u001b[33m,\u001b[39m{\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m})\u001b[33m.\u001b[39msort(\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":41,"index":41},"pos":41,"message":"Unexpected token, expected \",\" (1:41)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mzips\u001b[33m.\u001b[39mfind({}\u001b[33m,\u001b[39m{\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m})\u001b[33m.\u001b[39msort(\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token, expected \",\" (1:41)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mzips\u001b[33m.\u001b[39mfind({}\u001b[33m,\u001b[39m{\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m})\u001b[33m.\u001b[39msort(\u001b[32m'score'\u001b[39m\u001b[33m:\u001b[39m\u001b[33m-\u001b[39m\u001b[35m1\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                          \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:14:44.538Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({},{'score':1}).sort({'score':-1})"}}
{"t":{"$date":"2024-04-23T17:14:44.543Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{"projection":{"score":1}}}}}
{"t":{"$date":"2024-04-23T17:14:58.966Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({},{'score':1})"}}
{"t":{"$date":"2024-04-23T17:14:58.971Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{"projection":{"score":1}}}}}
{"t":{"$date":"2024-04-23T17:15:11.608Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({},{'_id':0,'score':1})"}}
{"t":{"$date":"2024-04-23T17:15:11.615Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{"projection":{"_id":0,"score":1}}}}}
{"t":{"$date":"2024-04-23T17:15:40.892Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({},{'_id':0,'score.score':1})"}}
{"t":{"$date":"2024-04-23T17:15:40.898Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{"projection":{"_id":0,"score.score":1}}}}}
{"t":{"$date":"2024-04-23T17:15:45.474Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({},{'_id':0,'scores.score':1})"}}
{"t":{"$date":"2024-04-23T17:15:45.482Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{"projection":{"_id":0,"scores.score":1}}}}}
{"t":{"$date":"2024-04-23T17:15:59.171Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({},{'_id':0,'$scores.score':1})"}}
{"t":{"$date":"2024-04-23T17:15:59.215Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{"projection":{"_id":0,"$scores.score":1}}}}}
{"t":{"$date":"2024-04-23T17:15:59.240Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: FieldPath field names may not start with '$'. Consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","code":16410,"codeName":"Location16410"},"ok":0,"code":16410,"codeName":"Location16410","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: FieldPath field names may not start with '$'. Consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async FindCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2410397)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-23T17:17:19.069Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":""}}
{"t":{"$date":"2024-04-23T17:17:31.412Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({},{'_id':0,'score':1})"}}
{"t":{"$date":"2024-04-23T17:17:31.421Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{},"options":{"projection":{"_id":0,"score":1}}}}}
{"t":{"$date":"2024-04-23T17:17:39.421Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({},{'_id':0,'$score':1})"}}
{"t":{"$date":"2024-04-23T17:17:39.428Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{},"options":{"projection":{"_id":0,"$score":1}}}}}
{"t":{"$date":"2024-04-23T17:17:39.434Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: FieldPath field names may not start with '$'. Consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","code":16410,"codeName":"Location16410"},"ok":0,"code":16410,"codeName":"Location16410","message":"FieldPath field names may not start with '$'. Consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: FieldPath field names may not start with '$'. Consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async FindCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2410397)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-23T17:17:46.968Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({},{'_id':1,'score':1})"}}
{"t":{"$date":"2024-04-23T17:17:46.983Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{},"options":{"projection":{"_id":1,"score":1}}}}}
{"t":{"$date":"2024-04-23T17:17:54.818Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({},{'_id':1,'scores':1})"}}
{"t":{"$date":"2024-04-23T17:17:54.831Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{},"options":{"projection":{"_id":1,"scores":1}}}}}
{"t":{"$date":"2024-04-23T17:18:18.326Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.grades.find({},{'_id':1,'scores':1}).sort({'scores.score':-1})"}}
{"t":{"$date":"2024-04-23T17:18:18.345Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"grades","arguments":{"query":{},"options":{"projection":{"_id":1,"scores":1}}}}}
{"t":{"$date":"2024-04-23T17:19:20.432Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.findOne()"}}
{"t":{"$date":"2024-04-23T17:19:20.439Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-23T17:20:12.632Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.zips.find({'state':'TX'},{'pop':1,'city':1})"}}
{"t":{"$date":"2024-04-23T17:20:12.644Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"zips","arguments":{"query":{"state":"TX"},"options":{"projection":{"pop":1,"city":1}}}}}
{"t":{"$date":"2024-04-23T17:20:52.087Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.findOne()"}}
{"t":{"$date":"2024-04-23T17:20:52.094Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"findOne","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{},"options":{}}}}
{"t":{"$date":"2024-04-23T17:22:28.572Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:45)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions:1'\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":45,"index":45},"pos":45,"message":"Unexpected token (1:45)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions:1'\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:45)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions:1'\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m                                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:22:33.922Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'name':'Sony'},{'acquisitions':1})"}}
{"t":{"$date":"2024-04-23T17:22:33.932Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"name":"Sony"},"options":{"projection":{"acquisitions":1}}}}}
{"t":{"$date":"2024-04-23T17:23:39.943Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":13,"index":13},"pos":13,"message":"Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m)\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:24:01.122Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":13,"index":13},"pos":13,"message":"Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{{\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[32m'Sony'\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m}}\u001b[33m.\u001b[39macquisition\u001b[35m.0\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:28:29.084Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'$acquisitions.0.acquired_year':{$gt:2007}},{'name':1,'founded_year':1})"}}
{"t":{"$date":"2024-04-23T17:28:29.091Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"$acquisitions.0.acquired_year":{"$gt":2007}},"options":{"projection":{"name":1,"founded_year":1}}}}}
{"t":{"$date":"2024-04-23T17:28:29.103Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: unknown top level operator: $acquisitions.0.acquired_year. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"unknown top level operator: $acquisitions.0.acquired_year. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","code":2,"codeName":"BadValue"},"ok":0,"code":2,"codeName":"BadValue","message":"unknown top level operator: $acquisitions.0.acquired_year. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: unknown top level operator: $acquisitions.0.acquired_year. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async FindCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2410397)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-23T17:28:46.034Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions.0.acquired_year':{$gt:2007}},{'name':1,'founded_year':1})"}}
{"t":{"$date":"2024-04-23T17:28:46.040Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions.0.acquired_year":{"$gt":2007}},"options":{"projection":{"name":1,"founded_year":1}}}}}
{"t":{"$date":"2024-04-23T17:29:30.611Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions.0.acquired_year':{$gt:2007}},{'name':1,'founded_year':1})"}}
{"t":{"$date":"2024-04-23T17:29:30.615Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions.0.acquired_year":{"$gt":2007}},"options":{"projection":{"name":1,"founded_year":1}}}}}
{"t":{"$date":"2024-04-23T17:31:41.694Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({},{'company.name':1})"}}
{"t":{"$date":"2024-04-23T17:31:41.703Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{},"options":{"projection":{"company.name":1}}}}}
{"t":{"$date":"2024-04-23T17:33:52.888Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({$elemMatch:[{'acquired_year':2010},{'acquired_month':3},{'acquired_day':2}]},{'_id':0,'company.name':1})"}}
{"t":{"$date":"2024-04-23T17:33:52.896Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"$elemMatch":[{"acquired_year":2010},{"acquired_month":3},{"acquired_day":2}]},"options":{"projection":{"_id":0,"company.name":1}}}}}
{"t":{"$date":"2024-04-23T17:33:52.906Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","code":2,"codeName":"BadValue"},"ok":0,"code":2,"codeName":"BadValue","message":"unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async FindCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2410397)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-23T17:34:27.046Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({$elemMatch:[{'acquired_year':2010},{'acquired_month':3},{'acquired_day':2}]},{'_id':0,'name':1})"}}
{"t":{"$date":"2024-04-23T17:34:27.051Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"$elemMatch":[{"acquired_year":2010},{"acquired_month":3},{"acquired_day":2}]},"options":{"projection":{"_id":0,"name":1}}}}}
{"t":{"$date":"2024-04-23T17:34:27.056Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","attr":{"errorResponse":{"ok":0,"errmsg":"unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","code":2,"codeName":"BadValue"},"ok":0,"code":2,"codeName":"BadValue","message":"unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.","name":"MongoServerError","stack":"MongoServerError: unknown top level operator: $elemMatch. If you have a field name that starts with a '$' symbol, consider using $getField or $setField.\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async FindCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2410397)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-23T17:35:21.534Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"SyntaxError: Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m{$elemMatch\u001b[33m:\u001b[39m[{\u001b[32m'acquired_year'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m2010\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquired_month'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m3\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquired_day'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m2\u001b[39m}]}}}\u001b[33m,\u001b[39m{\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m0\u001b[39m\u001b[33m,\u001b[39m\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","attr":{"code":"BABEL_PARSE_ERROR","reasonCode":"UnexpectedToken","loc":{"line":1,"column":13,"index":13},"pos":13,"message":"Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m{$elemMatch\u001b[33m:\u001b[39m[{\u001b[32m'acquired_year'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m2010\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquired_month'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m3\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquired_day'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m2\u001b[39m}]}}}\u001b[33m,\u001b[39m{\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m0\u001b[39m\u001b[33m,\u001b[39m\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m","name":"SyntaxError","stack":"SyntaxError: Unexpected token (1:13)\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 |\u001b[39m db\u001b[33m.\u001b[39mcie\u001b[33m.\u001b[39mfind({{\u001b[32m'acquisitions'\u001b[39m\u001b[33m:\u001b[39m{$elemMatch\u001b[33m:\u001b[39m[{\u001b[32m'acquired_year'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m2010\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquired_month'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m3\u001b[39m}\u001b[33m,\u001b[39m{\u001b[32m'acquired_day'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m2\u001b[39m}]}}}\u001b[33m,\u001b[39m{\u001b[32m'_id'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m0\u001b[39m\u001b[33m,\u001b[39m\u001b[32m'name'\u001b[39m\u001b[33m:\u001b[39m\u001b[35m1\u001b[39m})\u001b[0m\n\u001b[0m \u001b[90m   |\u001b[39m              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 |\u001b[39m\u001b[0m\n","cause":null}}
{"t":{"$date":"2024-04-23T17:35:44.066Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$elemMatch:[{'acquired_year':2010},{'acquired_month':3},{'acquired_day':2}]}},{'_id':0,'name':1})"}}
{"t":{"$date":"2024-04-23T17:35:44.075Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":[{"acquired_year":2010},{"acquired_month":3},{"acquired_day":2}]}},"options":{"projection":{"_id":0,"name":1}}}}}
{"t":{"$date":"2024-04-23T17:35:44.086Z"},"s":"E","c":"MONGOSH","id":1000000006,"ctx":"repl","msg":"MongoServerError: $elemMatch needs an Object","attr":{"errorResponse":{"ok":0,"errmsg":"$elemMatch needs an Object","code":2,"codeName":"BadValue"},"ok":0,"code":2,"codeName":"BadValue","message":"$elemMatch needs an Object","name":"MongoServerError","stack":"MongoServerError: $elemMatch needs an Object\n    at Connection.sendCommand (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2336475)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Connection.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2337288)\n    at async Server.command (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2550382)\n    at async t.executeOperation (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2500000)\n    at async FindCursor._initialize (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2410397)\n    at async [kInit] (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2402871)\n    at async C (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:3:2403415)\n    at async t._tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:196805)\n    at async t.tryNext (eval at module.exports (node:lib-boxednode/mongosh:103:20), <anonymous>:213:319752)","cause":null}}
{"t":{"$date":"2024-04-23T17:36:20.254Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$elemMatch:{'acquired_year':2010,'acquired_month':3,'acquired_day':2}}},{'_id':0,'name':1})"}}
{"t":{"$date":"2024-04-23T17:36:20.259Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"acquired_year":2010,"acquired_month":3,"acquired_day":2}}},"options":{"projection":{"_id":0,"name":1}}}}}
{"t":{"$date":"2024-04-23T17:39:33.577Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$elemMatch:{$ne:['$price_currency_code','USD']}}},{'name':1})"}}
{"t":{"$date":"2024-04-23T17:39:33.584Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"$ne":["$price_currency_code","USD"]}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-23T17:40:49.740Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find({'acquisitions':{$elemMatch:{'price_currency_code':{$ne:'USD'}}}},{'name':1})"}}
{"t":{"$date":"2024-04-23T17:40:49.747Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"price_currency_code":{"$ne":"USD"}}}},"options":{"projection":{"name":1}}}}}
{"t":{"$date":"2024-04-23T17:41:03.024Z"},"s":"I","c":"MONGOSH","id":1000000007,"ctx":"repl","msg":"Evaluating input","attr":{"input":"db.cie.find(\n  {\"acquisitions\": \n    { \"$elemMatch\": \n      {\"price_currency_code\" : {\"$ne\":\"USD\"}}}},\n  {\"name\":1, \"_id\":0}\n)"}}
{"t":{"$date":"2024-04-23T17:41:03.029Z"},"s":"I","c":"MONGOSH","id":1000000011,"ctx":"shell-api","msg":"Performed API call","attr":{"method":"find","class":"Collection","db":"sample","coll":"cie","arguments":{"query":{"acquisitions":{"$elemMatch":{"price_currency_code":{"$ne":"USD"}}}},"options":{"projection":{"name":1,"_id":0}}}}}
{"t":{"$date":"2024-04-23T17:41:59.758Z"},"s":"I","c":"MONGOSH","id":1000000045,"ctx":"analytics","msg":"Flushed outstanding data","attr":{"flushError":"Trying to persist throttle state before userId is set","flushDuration":0}}
